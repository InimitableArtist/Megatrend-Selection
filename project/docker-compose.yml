version: '3.9'
services:
  api:
    build: ./intro_project
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    hostname: app

    env_file: ./db/.env
    ports:
      - "8000:8000"
    networks:
      - main
    container_name: soda_app
    restart: on-failure
    volumes:
      - ./intro_project:/src
      - ./test_images:/src/app/tests/test_images

    depends_on:
      - db
      - tf_serving
      - redis
      - minio

  tf_serving:
    command:
      - --model_config_file=/models.conf
    image: tensorflow/serving
    networks:
      - main
    ports:
      - "8500:8500"
      - "8501:8501"
    volumes:
      - ./intro_project/models/soda_classifier:/models/soda_classifier
      - ./intro_project/models/soda_detection:/models/soda_detection
      - ./intro_project/models/models.conf:/models.conf

  db:
    image: postgres:13.4
    hostname: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/

    env_file:
      - ./db/.env
    
    networks:
      - main
    restart: on-failure
  
  redis:
    image: redis:latest
    hostname: redis

    networks:
      - main
  celery:
    build: ./intro_project
    restart: on-failure
    command: celery -A app worker -l info
    volumes:
      - ./intro_project:/src

    env_file:
      - ./db/.env

    depends_on:
      - api
      - db
      - redis

    networks:
      - main

    hostname: celery
    
  minio:
    command: server /data --console-address ":9001"
    image: quay.io/minio/minio
    expose:
      - "9000"
      - "9001"
    env_file:
      - ./db/.env
    hostname: minio
    volumes:
      - minio_data:/data
    restart: on-failure
    networks:
      - main

volumes:
  postgres_data:
  minio_data:
  

networks:
  main: